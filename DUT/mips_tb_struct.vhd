-- VHDL Entity MIPS.MIPS_tb.symbol
--
-- Created:
--          by - kolaman.UNKNOWN (KOLAMAN-PC)
--          at - 09:22:45 17/02/2013
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2011.1 (Build 18)
--


ENTITY MIPS_tb IS
-- Declarations

END MIPS_tb ;

--
-- VHDL Architecture MIPS.MIPS_tb.struct
--
-- Created:
--          by - kolaman.UNKNOWN (KOLAMAN-PC)
--          at - 09:22:45 17/02/2013
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2011.1 (Build 18)
--
LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;

--LIBRARY work;

ARCHITECTURE struct OF MIPS_tb IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL ALU_result_out  : STD_LOGIC_VECTOR( 31 DOWNTO 0 );
   SIGNAL Branch_out      : STD_LOGIC;
   SIGNAL Instruction_out : STD_LOGIC_VECTOR( 31 DOWNTO 0 );
   SIGNAL Memwrite_out    : STD_LOGIC;
   SIGNAL PC              : STD_LOGIC_VECTOR( 9 DOWNTO 0 );
   SIGNAL Regwrite_out    : STD_LOGIC;
   SIGNAL Zero_out        : STD_LOGIC;
   SIGNAL clock           : STD_LOGIC;
   SIGNAL read_data_1_out : STD_LOGIC_VECTOR( 31 DOWNTO 0 );
   SIGNAL read_data_2_out : STD_LOGIC_VECTOR( 31 DOWNTO 0 );
   SIGNAL reset,rst           : STD_LOGIC;
   SIGNAL flag,ena	          : STD_LOGIC;
   SIGNAL write_data_out  : STD_LOGIC_VECTOR( 31 DOWNTO 0 );
   SIGNAL			SW0_7				: 	STD_LOGIC_VECTOR( 7 DOWNTO 0 ):=X"01";
   SIGNAL			KEY1				: 	STD_LOGIC:='1'; 
   SIGNAL			KEY2				: 	STD_LOGIC:='1'; 
   SIGNAL			KEY3				: 	STD_LOGIC:='1'; 
   SIGNAL			LEDR				: 	STD_LOGIC_VECTOR( 7 DOWNTO 0 );
   SIGNAL			HEX0				: 	STD_LOGIC_VECTOR( 6 DOWNTO 0 );
   SIGNAL			HEX1				: 	STD_LOGIC_VECTOR( 6 DOWNTO 0 );
   SIGNAL			HEX2				: 	STD_LOGIC_VECTOR( 6 DOWNTO 0 );
   SIGNAL			HEX3				: 	STD_LOGIC_VECTOR( 6 DOWNTO 0 );	
   SIGNAL            HEX4				: 	STD_LOGIC_VECTOR( 6 DOWNTO 0 );
   SIGNAL            HEX5				: 	STD_LOGIC_VECTOR( 6 DOWNTO 0 );
   SIGNAL            PWM	     		: 	STD_LOGIC; 
           

   -- Component Declarations
   COMPONENT MCU
	PORT( reset, clock,ena				: IN 	STD_LOGIC; 
	SW0_7				: IN	STD_LOGIC_VECTOR( 7 DOWNTO 0 );
	KEY1				: IN	STD_LOGIC;
	KEY2				: IN	STD_LOGIC;
	KEY3				: IN	STD_LOGIC;
	LEDR				: OUT	STD_LOGIC_VECTOR( 7 DOWNTO 0 ):="00000000";
	HEX0				: OUT	STD_LOGIC_VECTOR( 6 DOWNTO 0 ):="0000000";
	HEX1				: OUT	STD_LOGIC_VECTOR( 6 DOWNTO 0 ):="0000000";
	HEX2				: OUT	STD_LOGIC_VECTOR( 6 DOWNTO 0 ):="0000000";
	HEX3				: OUT	STD_LOGIC_VECTOR( 6 DOWNTO 0 ):="0000000";
	HEX4				: OUT	STD_LOGIC_VECTOR( 6 DOWNTO 0 ):="0000000";
	HEX5				: OUT	STD_LOGIC_VECTOR( 6 DOWNTO 0 ):="0000000";		
	PWM	     			: OUT	STD_LOGIC);	   
   
   END COMPONENT;
   COMPONENT MIPS_tester
   PORT( 
      ALU_result_out  : IN     STD_LOGIC_VECTOR ( 31 DOWNTO 0 );
      Branch_out      : IN     STD_LOGIC;
      Instruction_out : IN     STD_LOGIC_VECTOR ( 31 DOWNTO 0 );
      Memwrite_out    : IN     STD_LOGIC;
      PC              : IN     STD_LOGIC_VECTOR ( 9 DOWNTO 0 );
      Regwrite_out    : IN     STD_LOGIC;
      Zero_out        : IN     STD_LOGIC;
      read_data_1_out : IN     STD_LOGIC_VECTOR ( 31 DOWNTO 0 );
      read_data_2_out : IN     STD_LOGIC_VECTOR ( 31 DOWNTO 0 );
      write_data_out  : IN     STD_LOGIC_VECTOR ( 31 DOWNTO 0 );
      clock           : OUT    STD_LOGIC;
	  ena           : OUT    STD_LOGIC;
      reset           : OUT    STD_LOGIC
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   --FOR ALL : MIPS USE ENTITY work.mips;
   --FOR ALL : MIPS_tester USE ENTITY work.mips_tester;
   -- pragma synthesis_on


BEGIN
rst	<=	not(reset);
flag <= '1';
   -- Instance port mappings.
   U_0 : MCU
      PORT MAP (
		reset 	    =>		reset ,
        clock		=>		clock,				
        ena			=>		ena		,						
		SW0_7		=>		SW0_7,				
        KEY1	    =>		KEY1	,	 					
        KEY2		=>		KEY2	,			 			
        KEY3		=>		KEY3	,			 			
        LEDR		=>		LEDR	,						
		HEX0		=>		HEX0	,
		HEX1		=>		HEX1	,
		HEX2	  	=>  	HEX2	,
		HEX3	    => 		HEX3	,
		HEX4	    =>      HEX4	,
		HEX5	    =>      HEX5	,
		PWM	        =>       PWM	);  
		 
		 
   U_1 : MIPS_tester
      PORT MAP (
         ALU_result_out  => ALU_result_out,
         Branch_out      => Branch_out,
         Instruction_out => Instruction_out,
         Memwrite_out    => Memwrite_out,
         PC              => PC,
         Regwrite_out    => Regwrite_out,
         Zero_out        => Zero_out,
         read_data_1_out => read_data_1_out,
         read_data_2_out => read_data_2_out,
         write_data_out  => write_data_out,
         clock           => clock,
		 ena			=>		ena		,	
         reset           => reset
      );

END struct;
